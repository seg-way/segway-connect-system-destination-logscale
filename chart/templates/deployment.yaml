apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "segway-sys-dest-logscale.fullname" . }}
  labels:
    {{- include "segway-sys-dest-logscale.labels" . | nindent 4 }}
spec:
  {{- if not (or .Values.autoscaling.enabled .Values.autoscaling.keda )}}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "segway-sys-dest-logscale.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "segway-sys-dest-logscale.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "segway-sys-dest-logscale.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: syslog-ng
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
          - name: SEGWAY_CONFIG_PATH
            value: /app/config/
          - name: SEGWAY_SYSLOG_PORT
            value: {{ .Values.service.port | quote }}
          - name: SEGWAY_DEST_LOGSCALE_HOST
            valueFrom:
              secretKeyRef:
                name: {{ include "segway-sys-dest-logscale.secretname" . }}
                key: host
          - name: SEGWAY_DEST_LOGSCALE_PORT
            valueFrom:
              secretKeyRef:
                name: {{ include "segway-sys-dest-logscale.secretname" . }}
                key: port
          - name: SEGWAY_DEST_LOGSCALE_PROTOCOL
            valueFrom:
              secretKeyRef:
                name: {{ include "segway-sys-dest-logscale.secretname" . }}
                key: protocol
          - name: SEGWAY_DEST_LOGSCALE_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ include "segway-sys-dest-logscale.secretname" . }}
                key: token
          - name: SEGWAY_DEST_LOGSCALE_INSTANCE_NAME
            value: {{ .Values.secret.data.instanceName | default .Release.Name | quote }}
          ports:
            - name: syslog-tcp
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 5
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
            exec:
              command: ["syslog-ng-ctl", "healthcheck", "--timeout", "5"]
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - mountPath: /var/lib/syslog-ng/
            name: cache-volume
          - name: config
            mountPath: "/app/config"
            readOnly: true
      {{- if .Values.metricsExporter.enabled }}
        - name: metrics-exporter
          securityContext:
            {{- toYaml .Values.metricsExporter.securityContext | nindent 12 }}
          image: "{{ .Values.metricsExporter.image.repository }}:{{ .Values.metricsExporter.image.tag }}"
          imagePullPolicy: {{ .Values.metricsExporter.image.pullPolicy }}
          args:
            - --socket.path=/var/lib/syslog-ng/syslog-ng.ctl
          ports:
            - name: metrics-http
              containerPort: 9577
              protocol: TCP
          volumeMounts:
          - mountPath: /var/lib/syslog-ng/
            name: cache-volume
      {{- end }}
      volumes:
      - name: cache-volume
        emptyDir:
          sizeLimit: 10Mi
      - name: config
        configMap:
          # Provide the name of the ConfigMap you want to mount.
          name: {{ include "segway-sys-dest-logscale.configmapname" . }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      topologySpreadConstraints:
        # - maxSkew: 1
        #   topologyKey: topology.kubernetes.io/zone
        #   whenUnsatisfiable: DoNotSchedule
        #   matchLabelKeys:
        #     - pod-template-hash
        # - maxSkew: 1
        #   topologyKey: kubernetes.io/hostname
        #   whenUnsatisfiable: ScheduleAnyway
        #   matchLabelKeys:
        #     - pod-template-hash
      {{- with .Values.topologySpreadConstraints }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
