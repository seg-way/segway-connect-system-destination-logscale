#for use with humio-structured
# template t_logscale_parsed_w_raw {
#     template('$(format-json --scope none --omit-empty-values
#       tags=$(format-json --scope none .logscale.tags.* --shift-levels 3)
#       events=json([$(format-json --scope none --omit-empty-values
#                 rawstring=$(template "${.segway.msgtemplate}")
#                 timestamp=$S_UNIXTIME
#                 attributes=$(format-json --scope none --scope none .Vendor.* --shift-levels 1 .ecs.* --shift-levels 4))])
#     )');
# };
# template t_logscale_parsed {
#     template('$(format-json --scope none --omit-empty-values
#       tags=$(format-json --scope none .logscale.tags.* --shift-levels 3)
#       events=json([$(format-json --scope none --omit-empty-values
#                 timestamp=$S_UNIXTIME
#                 attributes=$(format-json --scope none --scope none .Vendor.* --shift-levels 1 .ecs.* --shift-levels 4))])
#     )');
# };

# template t_logscale_compat_parsed_w_raw {
#     template('$(format-json --scope none --omit-empty-values
#       tags=$(format-json --scope none .logscale.tags.* --shift-levels 3)
#       events=json([$(format-json --scope none --omit-empty-values
#                 rawstring=$(template "${.segway.msgtemplate}")
#                 timestamp=$S_UNIXTIME
#                 attributes=$(format-json --scope none --scope none .Vendor.* --shift-levels 3 .ecs.* --shift-levels 4))])
#     )');
# };
# template t_logscale_compat_parsed {
#     template('$(format-json --scope none --omit-empty-values
#       tags=$(format-json --scope none .logscale.tags.* --shift-levels 3)
#       events=json([$(format-json --scope none --omit-empty-values
#                 timestamp=$S_UNIXTIME
#                 attributes=$(format-json --scope none --scope none .Vendor.* --shift-levels 3 .ecs.* --shift-levels 4))])
#     )');
# };


#for ingest/hec
template t_logscale_parsed_w_raw {
    template('$(format-json --scope none --omit-empty-values
      time=$S_UNIXTIME
      timezone=$S_TZOFFSET
      --rekey .Vendor.* --add-prefix event
      --rekey .ecs.* --shift-levels 4
      --rekey .logscale.hec.* --shift-levels 5
      --pair @rawstring=$(template "${.segway.msgtemplate}")
    )');
};
      # event=$(format-json --scope none --scope none .Vendor.* --shift-levels 1 .ecs.* --shift-levels 4)
      # fields=$(format-json --scope none --rekey .logscale.tags.* --shift-levels 5 --add-prefix x --pair @rawstring=$(template "${.segway.msgtemplate}"))
      # --rekey .logscale.hec.* --shift-levels 5


# template t_logscale_parsed {
#     template('$(format-json --scope none --omit-empty-values
#       time=$S_UNIXTIME
#       timezone=$S_TZOFFSET
#       event=$(format-json --scope none --scope none .Vendor.* --shift-levels 1 .ecs.* --shift-levels 4)
#       fields=$(format-json --scope none --rekey .logscale.tags.* --shift-levels 5 --add-prefix x --pair @rawstring=$(template "${.segway.msgtemplate}"))
#       --rekey .logscale.hec.* --shift-levels 5
#     )');
# };

# template t_logscale_compat_parsed_w_raw {
#     template('$(format-json --scope none --omit-empty-values
#       time=$S_UNIXTIME
#       timezone=$S_TZOFFSET
#       event=$(format-json --scope none --scope none .Vendor.* --shift-levels 3 .ecs.* --shift-levels 4)      
#       fields=$(format-json --scope none --rekey .logscale.tags.* --shift-levels 5 --add-prefix x --pair @rawstring=$(template "${.segway.msgtemplate}"))
#       --rekey .logscale.hec.* --shift-levels 5
#     )');
# };
# template t_logscale_compat_parsed {
#     template('$(format-json --scope none --omit-empty-values
#       time=$S_UNIXTIME
#       timezone=$S_TZOFFSET
#       event=$(format-json --scope none --scope none .Vendor.* --shift-levels 3 .ecs.* --shift-levels 4)
#       fields=$(format-json --scope none --rekey .logscale.tags.* --shift-levels 5 --add-prefix x --pair @rawstring=$(template "${.segway.msgtemplate}"))
#       --rekey .logscale.hec.* --shift-levels 5
#     )');
# };
