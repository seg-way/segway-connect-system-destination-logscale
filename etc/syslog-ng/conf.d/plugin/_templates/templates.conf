#for use with humio-structured
# template t_logscale_parsed_w_raw {
#     template('$(format-json --scope none --omit-empty-values
#       tags=$(format-json --scope none .logscale.tags.* --shift-levels 3)
#       events=json([$(format-json --scope none --omit-empty-values
#                 rawstring=$(template "${.segway.msgtemplate}")
#                 timestamp=$S_UNIXTIME
#                 attributes=$(format-json --scope none --scope none .Vendor.* --shift-levels 1 .ecs.* --shift-levels 4))])
#     )');
# };
# template t_logscale_parsed {
#     template('$(format-json --scope none --omit-empty-values
#       tags=$(format-json --scope none .logscale.tags.* --shift-levels 3)
#       events=json([$(format-json --scope none --omit-empty-values
#                 timestamp=$S_UNIXTIME
#                 attributes=$(format-json --scope none --scope none .Vendor.* --shift-levels 1 .ecs.* --shift-levels 4))])
#     )');
# };

# template t_logscale_compat_parsed_w_raw {
#     template('$(format-json --scope none --omit-empty-values
#       tags=$(format-json --scope none .logscale.tags.* --shift-levels 3)
#       events=json([$(format-json --scope none --omit-empty-values
#                 rawstring=$(template "${.segway.msgtemplate}")
#                 timestamp=$S_UNIXTIME
#                 attributes=$(format-json --scope none --scope none .Vendor.* --shift-levels 3 .ecs.* --shift-levels 4))])
#     )');
# };
# template t_logscale_compat_parsed {
#     template('$(format-json --scope none --omit-empty-values
#       tags=$(format-json --scope none .logscale.tags.* --shift-levels 3)
#       events=json([$(format-json --scope none --omit-empty-values
#                 timestamp=$S_UNIXTIME
#                 attributes=$(format-json --scope none --scope none .Vendor.* --shift-levels 3 .ecs.* --shift-levels 4))])
#     )');
# };


#for ingest/hec
template t_logscale_parsed_w_raw {
    template('$(format-json --scope none --omit-empty-values
      time=$S_UNIXTIME
      timezone=$S_TZOFFSET
      --key .Vendor.* --rekey .Vendor.* --shift-levels 1 --add-prefix event.
      --key .ecs.* --rekey .ecs.* --shift-levels 2 --add-prefix event.
      --key .logscale.hec.* --rekey .logscale.hec.* --shift-levels 3
      --key .logscale.tags.* --rekey .logscale.tags.* --shift-levels 3 --add-prefix event.#
      --pair event.@rawstring=$(template "${.segway.msgtemplate}")
    )');  
};

template t_logscale_parsed {
    template('$(format-json --scope none --omit-empty-values
      time=$S_UNIXTIME
      timezone=$S_TZOFFSET
      --key .Vendor.* --rekey .Vendor.* --shift-levels 1 --add-prefix event.
      --key .ecs.* --rekey .ecs.* --shift-levels 2 --add-prefix event.
      --key .logscale.hec.* --rekey .logscale.hec.* --shift-levels 3
      --key .logscale.tags.* --rekey .logscale.tags.* --shift-levels 3 --add-prefix event.#
    )');
};

template t_logscale_compat_parsed_w_raw {
    template('$(format-json --scope none --omit-empty-values
      time=$S_UNIXTIME
      timezone=$S_TZOFFSET
      --key .Vendor.* --rekey .Vendor.* --shift-levels 3 --add-prefix event.
      --key .ecs.* --rekey .ecs.* --shift-levels 2 --add-prefix event.
      --key .logscale.hec.* --rekey .logscale.hec.* --shift-levels 3
      --key .logscale.tags.* --rekey .logscale.tags.* --shift-levels 3 --add-prefix event.#
      --pair event.@rawstring=$(template "${.segway.msgtemplate}")
    )');  
};

template t_logscale_compat_parsed {
    template('$(format-json --scope none --omit-empty-values
      time=$S_UNIXTIME
      timezone=$S_TZOFFSET
      --key .Vendor.* --rekey .Vendor.* --shift-levels 3 --add-prefix event.
      --key .ecs.* --rekey .ecs.* --shift-levels 2 --add-prefix event.
      --key .logscale.hec.* --rekey .logscale.hec.* --shift-levels 3
      --key .logscale.tags.* --rekey .logscale.tags.* --shift-levels 3 --add-prefix event.#
    )');  
};
