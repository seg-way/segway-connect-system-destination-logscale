#for use with humio-structured
# template t_logscale_parsed_w_raw {
#     template('$(format-json --scope none --omit-empty-values
#       tags=$(format-json --scope none .logscale.tags.* --shift-levels 3)
#       events=json([$(format-json --scope none --omit-empty-values
#                 rawstring=$(template "${.segway.msgtemplate}")
#                 timestamp=$S_UNIXTIME
#                 attributes=$(format-json --scope none --scope none .Vendor.* --shift-levels 1 .ecs.* --shift-levels 3))])
#     )');
# };
# template t_logscale_parsed {
#     template('$(format-json --scope none --omit-empty-values
#       tags=$(format-json --scope none .logscale.tags.* --shift-levels 3)
#       events=json([$(format-json --scope none --omit-empty-values
#                 timestamp=$S_UNIXTIME
#                 attributes=$(format-json --scope none --scope none .Vendor.* --shift-levels 1 .ecs.* --shift-levels 3))])
#     )');
# };

# template t_logscale_compat_parsed_w_raw {
#     template('$(format-json --scope none --omit-empty-values
#       tags=$(format-json --scope none .logscale.tags.* --shift-levels 3)
#       events=json([$(format-json --scope none --omit-empty-values
#                 rawstring=$(template "${.segway.msgtemplate}")
#                 timestamp=$S_UNIXTIME
#                 attributes=$(format-json --scope none --scope none .Vendor.* --shift-levels 3 .ecs.* --shift-levels 3))])
#     )');
# };
# template t_logscale_compat_parsed {
#     template('$(format-json --scope none --omit-empty-values
#       tags=$(format-json --scope none .logscale.tags.* --shift-levels 3)
#       events=json([$(format-json --scope none --omit-empty-values
#                 timestamp=$S_UNIXTIME
#                 attributes=$(format-json --scope none --scope none .Vendor.* --shift-levels 3 .ecs.* --shift-levels 3))])
#     )');
# };


#for ingest/hec
template t_logscale_parsed_w_raw {
    template('$(format-json --scope none --omit-empty-values
      time=$S_UNIXTIME
      timezone=$S_TZOFFSET
      event=$(format-json --scope none --scope none .Vendor.* --shift-levels 1 .ecs.* --shift-levels 3)
      fields=$(format-json --scope none .logscale.tags.* --shift-levels 3 --add-prefix # --pair @rawstring=$(template "${.segway.msgtemplate}"))
      .logscale.hec.* --shift-levels 5--omit-empty-values      
    )');
};
template t_logscale_parsed {
    template('$(format-json --scope none --omit-empty-values
      time=$S_UNIXTIME
      timezone=$S_TZOFFSET
      event=$(format-json --scope none --scope none .Vendor.* --shift-levels 1 .ecs.* --shift-levels 3)
      fields=$(format-json --scope none .logscale.tags.* --shift-levels 3 --add-prefix #)
      .logscale.hec.* --shift-levels 5--omit-empty-values      
    )');
};

template t_logscale_compat_parsed_w_raw {
    template('$(format-json --scope none --omit-empty-values
      time=$S_UNIXTIME
      timezone=$S_TZOFFSET
      event=$(format-json --scope none --scope none .Vendor.* --shift-levels 3 .ecs.* --shift-levels 3)      
      fields=$(format-json --scope none .logscale.tags.* --shift-levels 3 --add-prefix # --pair @rawstring=$(template "${.segway.msgtemplate}"))
      .logscale.hec.* --shift-levels 5--omit-empty-values      
    )');
};
template t_logscale_compat_parsed {
    template('$(format-json --scope none --omit-empty-values
      time=$S_UNIXTIME
      timezone=$S_TZOFFSET
      event=$(format-json --scope none --scope none .Vendor.* --shift-levels 3 .ecs.* --shift-levels 3)
      fields=$(format-json --scope none .logscale.tags.* --shift-levels 3 --add-prefix #)
      .logscale.hec.* --shift-levels 5--omit-empty-values      
    )');
};
